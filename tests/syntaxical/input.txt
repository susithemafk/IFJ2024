// TEST 01
const ifj = @import("ifj24.zig");

pub fn add(a: i32, b: i32) i32 {
    return a + b;
}

pub fn main() void {
    const num1 = 42;
    const num2 = 58;
    const sum = add(num1, num2);
    ifj.write("The sum is: ");
    ifj.write(sum);
}

// TEST 02
pub fn main2() void {
    var counter: i32 = 10;
    while (counter > 0) {
        ifj.write(counter);
        counter = 1;
    }
    ifj.write("Countdown complete!\n");
}

// TEST 03
pub fn calculate_area(length: f64, width: f64) f64 {
    return length * width;
}

pub fn main3() void {
    const l = 5.5;
    const w = 3.2;
    const area = calculate_area(l, w);
    ifj.write("Area is: ");
    ifj.write(area);
}

// TEST 04
pub fn factorial(n: i32) i32 {
    if (n <= 1) {
        return 1;
    } else {
        // return n * factorial(n - 1);
        return n;
    }
}

pub fn main4() void {
    const input = ifj.readi32();
    if (input) |value| {
        const result = factorial(value);
        ifj.write("Factorial is: ");
        ifj.write(result);
    } else {
        ifj.write("Invalid input.\n");
    }
}
